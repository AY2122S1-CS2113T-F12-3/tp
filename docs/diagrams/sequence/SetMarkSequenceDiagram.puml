@startuml
!include SequenceStyle.puml

Actor User as user
Participant ":Ui" as ui
Participant ":Taa" as taa
Participant "<<class>>\nParser" as parser
Participant ":SetMarkCommand" as setMarkCommand
Participant ":ModuleList" as moduleList
Participant ":Module" as module
Participant ":AssessmentList" as assessmentList
Participant ":StudentList" as studentList
Participant ":Student" as student
Participant ":Storage" as storage

activate taa

taa -> ui : getUserInput()
activate ui

user -> ui : "set_mark c/CS2113T\ns/1 a/Midterms m/80"
ui --> taa : userInput:String
deactivate ui

taa -> parser : parseUserInput(userInput)
activate parser

create setMarkCommand
parser -> setMarkCommand
activate setMarkCommand
setMarkCommand -> parser
deactivate setMarkCommand

parser --> taa : command:SetMarkCommand
deactivate parser

taa -> setMarkCommand : checkArguments()
activate setMarkCommand

setMarkCommand --> taa
deactivate setMarkCommand

taa -> setMarkCommand : execute(moduleList:ModuleList, ui:Ui, storage:Storage)
activate setMarkCommand

setMarkCommand -> moduleList : getModuleWithCode(moduleCode:String)
activate moduleList
moduleList --> setMarkCommand : module:Module
deactivate moduleList

setMarkCommand -> module : getStudentList()
activate module
module --> setMarkCommand : studentList:StudentList
deactivate module

setMarkCommand -> module : getAssessmentList()
activate module
module --> setMarkCommand : assessmentList:AssessmentList
deactivate module

setMarkCommand -> assessmentList : getAssessment(assessmentName:String)
activate assessmentList
assessmentList --> setMarkCommand : assessment:Assessment
deactivate assessmentList

setMarkCommand -> studentList : getStudentAt(studentIndex:Integer)
activate studentList
studentList --> setMarkCommand : student:Student
deactivate studentList

setMarkCommand -> student : setMarks(assessmentName:String, marks:Double)
activate student
student --> setMarkCommand
deactivate student

setMarkCommand -> storage : save(moduleList:ModuleList)
activate storage
storage --> setMarkCommand
deactivate storage

setMarkCommand -> ui : printMessage("Marks set for ...")
activate ui
ui -> user : Display message:\n"Marks set for ..."
ui --> setMarkCommand
deactivate ui

deactivate setMarkCommand

@enduml