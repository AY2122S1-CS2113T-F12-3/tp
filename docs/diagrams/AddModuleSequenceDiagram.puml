@startuml
!include style.puml

Actor User as user
Participant ":Ui" as ui
Participant ":Taa" as taa
Participant "<<class>>\nParser" as parser
Participant ":AddModuleCommand" as addModuleCommand
Participant ":ModuleList" as moduleList
Participant ":Module" as module
Participant ":Storage" as storage

activate taa

taa -> ui : getUserInput()
activate ui

user -> ui : "add_module c/CS2113T\nn/Software Engineering"
ui --> taa : userInput:String
deactivate ui

taa -> parser : parseUserInput(userInput)
activate parser

create addModuleCommand
parser -> addModuleCommand
activate addModuleCommand
addModuleCommand -> parser
deactivate addModuleCommand

parser --> taa : command:AddModuleCommand
deactivate parser

taa -> addModuleCommand : checkArguments()
activate addModuleCommand
alt Exception
addModuleCommand --> taa : throw :TaaException
taa -> ui : printException(message:String)
activate ui
ui -> user : Display Exception message
ui --> taa
deactivate ui

else else
addModuleCommand --> taa
deactivate addModuleCommand

taa -> addModuleCommand : execute(moduleList:ModuleList, ui:Ui, storage:Storage)
activate addModuleCommand

addModuleCommand -> moduleList : getModuleWithCode(moduleCode:String)
activate moduleList

moduleList --> addModuleCommand : module:Module
deactivate moduleList

alt module != null
addModuleCommand --> taa : throw :TaaException
taa -> ui : printException(message:String)
activate ui
ui -> user : Display Exception message
ui --> taa
deactivate ui

else else
create module
addModuleCommand -> module
activate module
module --> addModuleCommand
deactivate module

addModuleCommand -> moduleList : addModule(module:Module)
activate moduleList
moduleList --> addModuleCommand
deactivate moduleList

addModuleCommand -> storage : save(moduleList:ModuleList)
activate storage
storage --> addModuleCommand
deactivate storage

addModuleCommand -> ui : printMessage("Module added: ...")
activate ui
ui -> user : Display message:\n"Module added: ..."
ui --> addModuleCommand
deactivate ui

deactivate addModuleCommand
end
end

@enduml